/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.61
 * Generated at: 2015-05-07 02:24:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import oauth.signpost.OAuthConsumer;
import oauth.signpost.OAuthProvider;
import oauth.signpost.basic.DefaultOAuthConsumer;
import oauth.signpost.basic.DefaultOAuthProvider;

public final class oauthCallback_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/oauthHeader.jsp", Long.valueOf(1430298842000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');

	String ConsumerKey = "xVwUtBuC5l2NnMVHc58O";
	String ConsumerSecret = "LIjJJmKJIc";
	String CallbackUrl = "http://localhost:8080/Recommerce_Collector/oauthCallback.jsp";

	String requestTokenUrl = "https://nid.naver.com/naver.oauth?mode=req_req_token";
	String accessTokenUrl = "https://nid.naver.com/naver.oauth?mode=req_acc_token";
	String authorizeUrl = "https://nid.naver.com/naver.oauth?mode=auth_req_token";

      out.write('\n');
      out.write('\n');

	String oauth_token = request.getParameter("oauth_token");
	String oauth_verifier = request.getParameter("oauth_verifier");

	OAuthConsumer consumer = new DefaultOAuthConsumer(ConsumerKey,
			ConsumerSecret);
	String request_token = (String) session
			.getAttribute("request_token");
	String request_token_secret = (String) session
			.getAttribute("request_token_secret");
	consumer.setTokenWithSecret(request_token, request_token_secret);
	OAuthProvider provider = new DefaultOAuthProvider(requestTokenUrl,
			accessTokenUrl, authorizeUrl);

	provider.setOAuth10a(true);
	provider.retrieveAccessToken(consumer, oauth_verifier);
	String access_token = consumer.getToken();
	String access_token_secret = consumer.getTokenSecret();
	session.setAttribute("access_token", access_token);
	session.setAttribute("access_token_secret", access_token_secret);

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>OAuth callback</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<h2>API 호출 URL 및 파리미터 입력</h2>\n");
      out.write("\t<form method=\"GET\" action=\"oauthApiCall.jsp\">\n");
      out.write("\t\tapi_url : <input type=\"text\" name=\"apiUrl\"\n");
      out.write("\t\t\tvalue=\"http://openapi.naver.com/cafe/getArticleList.xml\" size=\"60\" />\n");
      out.write("\t\t<br /> club_id : <input type=\"text\" name=\"clubid\" value=10050146 />\n");
      out.write("\t\t<br /> menu_id : <input type=\"text\" name=\"search.menuid\" value=339 />\n");
      out.write("\t\t<br /> page : <input type=\"text\" name=\"search.page\" value=1 /> <br />\n");
      out.write("\t\tperPage : <input type=\"text\" name=\"search.perPage\" value=15 /> <br />\n");
      out.write("\t\t<input type=\"submit\" value=\"API 호출\" />\n");
      out.write("\t</form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
